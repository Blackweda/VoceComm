SQL REFERENCE SHEET
===================


(fields)		SELECT	                    *               Name, ID

(tables)		FROM                        dbo.Customer

(filters)		WHERE			    IS NOT NULL / City = 'Toronto' /
								          City IN ('Toronto', 'Edmonton') /
								          City LIKE 'To%' /
								          City NOT LIKE '%on%'
								          (City LIKE '%on%) OR/AND (Name LIKE 'Toronto')
								
				    ORDER BY 		  Name DESC	
				    
https://youtu.be/IhvN_MxLKBY

CREATE DATABASE MyDemoDB

USE MyDemoDB
CREATE TABLE employee (id int, name varchar(50), dept varchar(50), age int, salary decimal(18,2), location varchar(40))

INSERT INTO employee (name, dept, age, salary, location) VALUES ('Wayne', 'Programmer', 29, 45000, 'Toronto');

UPDATE employee SET name = 'Wayner', dept = 'Developer', salary = 50000
WHERE id = 1


DELETE FROM employee WHERE id = 1

---------------------------------------------------------------------------------

CREATE TABLE customers(
	id INT NOT NULL AUTO_INCREMENT,
	firstName VARCHAR(255),
	lastName VARCHAR(255),
	email VARCHAR(255),
	address VARCHAR(255),
	city VARCHAR(255),
	PRIMARY KEY(id)
);

INSERT INTO customers (firstName, lastName, city) VALUES
('Wayne', 'Williams', 'Toronto'),
('Amriz', 'Maharaz', 'Edmonton');


ALTER TABLE customers ADD testColumn VARCHAR(255);


ALTER TABLE customers MODIFY COLUMN testColumn INT(11);				// depends on Program using...
			ALTER COLUMN testColumn INT(11);
			

ALTER TABLE customers
DROP COLUMN testColumn;


SELECT state FROM customers;						// returns all rows' state
SELECT DISTINCT state FROM customers;					// returns only 1 instance of each state from all rows


https://youtu.be/nWeW3sCmD2k @ 27:00

SELECT * FROM customers WHERE age < 30

=
<> or !=
>
<
>=
BETWEEN
LIKE
IN
IS or IS NOT
IS NOT DISTINCT FROM
AS



CREATE INDEX Cindex
ON customers(city);

DROP INDEX Cindex ON customers;



CREATE TABLE orders (
	id INT NOT NULL AUTO_INCREMENT,
	orderNumber INT,
	productId INT, 
	customerId INT,
	orderDate DATETIME DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(id),
	FOREIGN KEY(customerId) REFERENCES customers(id),
	FOREIGN KEY(productId) REFERENCES products(id)
);


JOINS

- used to combine rows from two or more tables based on a common field between them.

INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN




SELECT customers.firstName, customers.lastName, orders.orderNumber
FROM customers
INNER JOIN orders
ON customers.id = orders.customerId
ORDER BY orders.orderNumber;


SELECT customers.firstName, customers.lastName, orders.orderNumber, orders.orderDate
FROM customers
LEFT JOIN orders ON customers.id = orders.customerId
ORDER BY customers.lastName;


SELECT orders.OrderNumber, customers.firstName, customers.lastName
FROM orders
RIGHT JOIN customers 
ON orders.customerID = customers.id
ORDER BY orders.orderNumber;


SELECT orders.orderNumber, customers.firstName, customers.lastName, products.name
FROM orders
INNER JOIN products
ON orders.productId = products.id
INNER JOIN customers
ON orders.customerId = customers.id
ORDER BY orders.orderNumber;


ALIASES*****************

SELECT firstName AS 'First Name', lastName AS 'Last Name' FROM customers;


SELECT CONCAT(firstName, ' ', lastName) AS 'Full Name', address, state 
FROM customers;

SELECT o.id, o.orderDate, c.firstName, c.lastName
FROM customers AS c, orders AS o;





SELECT AVG(age) FROM customers;		// average of the ages
SELECT MAX(age) FROM customers;
	   MIN
	   UCASE firstName			// will return first name of all results in upper case
	   LCASE

SELECT COUNT(age) FROM customers;	// how many records have ages
SELECT SUM(age) FROM customers;		// ages totalled up



SELECT age, COUNT(age)
FROM customers
WHERE age > 30
GROUP BY age
HAVING COUNT(AGE) >= 2;				// 2 or more customers having the same age



These questions are the most frequently asked in interviews.

To fetch ALTERNATE records from a table. (EVEN NUMBERED)
select * from emp where rowid in (select decode(mod(rownum,2),0,rowid, null) from emp);
To select ALTERNATE records from a table. (ODD NUMBERED)
select * from emp where rowid in (select decode(mod(rownum,2),0,null ,rowid) from emp);
Find the 3rd MAX salary in the emp table.
select distinct sal from emp e1 where 3 = (select count(distinct sal) from emp e2 where e1.sal <= e2.sal);
Find the 3rd MIN salary in the emp table.
select distinct sal from emp e1 where 3 = (select count(distinct sal) from emp e2where e1.sal >= e2.sal);
Select FIRST n records from a table.
select * from emp where rownum <= &n;
Select LAST n records from a table
select * from emp minus select * from emp where rownum <= (select count(*) - &n from emp);
List dept no., Dept name for all the departments in which there are no employees in the department.
select * from dept where deptno not in (select deptno from emp);  
alternate solution:  select * from dept a where not exists (select * from emp b where a.deptno = b.deptno);
altertnate solution:  select empno,ename,b.deptno,dname from emp a, dept b where a.deptno(+) = b.deptno and empno is null;
How to get 3 Max salaries ?
select distinct sal from emp a where 3 >= (select count(distinct sal) from emp b where a.sal <= b.sal) order by a.sal desc;
How to get 3 Min salaries ?
select distinct sal from emp a  where 3 >= (select count(distinct sal) from emp b  where a.sal >= b.sal);
How to get nth max salaries ?
select distinct hiredate from emp a where &n =  (select count(distinct sal) from emp b where a.sal >= b.sal);
Select DISTINCT RECORDS from emp table.
select * from emp a where  rowid = (select max(rowid) from emp b where  a.empno=b.empno);
How to delete duplicate rows in a table?
delete from emp a where rowid != (select max(rowid) from emp b where  a.empno=b.empno);
Count of number of employees in  department  wise.
select count(EMPNO), b.deptno, dname from emp a, dept b  where a.deptno(+)=b.deptno  group by b.deptno,dname;
 Suppose there is annual salary information provided by emp table. How to fetch monthly salary of each and every employee?

select ename,sal/12 as monthlysal from emp;

Select all record from emp table where deptno =10 or 40.

select * from emp where deptno=30 or deptno=10;

Select all record from emp table where deptno=30 and sal>1500.

select * from emp where deptno=30 and sal>1500;

Select  all record  from emp where job not in SALESMAN  or CLERK.

select * from emp where job not in ('SALESMAN','CLERK');

Select all record from emp where ename in 'BLAKE','SCOTT','KING'and'FORD'.

select * from emp where ename in('JONES','BLAKE','SCOTT','KING','FORD');

Select all records where ename starts with ‘S’ and its lenth is 6 char.

select * from emp where ename like'S____';

Select all records where ename may be any no of  character but it should end with ‘R’.

select * from emp where ename like'%R';

Count  MGR and their salary in emp table.

select count(MGR),count(sal) from emp;

In emp table add comm+sal as total sal  .

select ename,(sal+nvl(comm,0)) as totalsal from emp;

Select  any salary <3000 from emp table. 

select * from emp  where sal> any(select sal from emp where sal<3000);

Select  all salary <3000 from emp table. 

select * from emp  where sal> all(select sal from emp where sal<3000);

Select all the employee  group by deptno and sal in descending order.

select ename,deptno,sal from emp order by deptno,sal desc;

How can I create an empty table emp1 with same structure as emp?

Create table emp1 as select * from emp where 1=2;

How to retrive record where sal between 1000 to 2000?
Select * from emp where sal>=1000 And  sal<2000

Select all records where dept no of both emp and dept table matches.
select * from emp where exists(select * from dept where emp.deptno=dept.deptno)

If there are two tables emp1 and emp2, and both have common record. How can I fetch all the recods but common records only once?
(Select * from emp) Union (Select * from emp1)

How to fetch only common records from two tables emp and emp1?
(Select * from emp) Intersect (Select * from emp1)

 How can I retrive all records of emp1 those should not present in emp2?
(Select * from emp) Minus (Select * from emp1)

Count the totalsa  deptno wise where more than 2 employees exist.
SELECT  deptno, sum(sal) As totalsal
FROM emp
GROUP BY deptno
HAVING COUNT(empno) > 2




				    
